package ui.Food;

import resort.EcoSystem;
import resort.Email.EmailAlert;
import resort.Food.FoodItem;
import resort.Client.TransactionHistory.ClientTransaction;
import resort.User.User;
import resort.RolesCD.FoodRequest;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author manikantareddythikkavarapu
 */
public class FoodWorkRequest extends javax.swing.JPanel {

    private EcoSystem system;
    float totalPrice;

    /**
     * Creates new form WorkRequest
     */
    public FoodWorkRequest(EcoSystem system) {
        initComponents();
        this.system = system;
        populateWorkRequestTable();
        formatRows();
    }

    public void populateWorkRequestTable() {
        ArrayList<FoodRequest> pendingFoodBevRequest = new ArrayList<FoodRequest>();
        ArrayList<FoodRequest> non_pendingFoodBevRequest = new ArrayList<FoodRequest>();

        for (FoodRequest foodBevWorkRequest : system.getFoodRequestDirectory().getFoodRequestsList()) {
            if (foodBevWorkRequest.getOrderStatus().equals("Pending")) {
                pendingFoodBevRequest.add(foodBevWorkRequest);
            } else {
                non_pendingFoodBevRequest.add(foodBevWorkRequest);
            }
        }

        populate_based_on_status(pendingFoodBevRequest, non_pendingFoodBevRequest);
    }

    public void populate_based_on_status(ArrayList<FoodRequest> pendingFoodBevRequest, ArrayList<FoodRequest> non_pendingFoodBevRequest) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        for (FoodRequest pfbr : pendingFoodBevRequest) {
            ArrayList<String> foodItemNames = new ArrayList<String>();
            long foodItemsTotalPrice = 0;
            for (FoodItem fb : pfbr.getFoodItemDetails()) {
                foodItemNames.add(fb.getFoodItemName());
                foodItemsTotalPrice += fb.getFoodItemPrice();
            }
            totalPrice = foodItemsTotalPrice;
            Object[] newRow = new Object[4];
            newRow[0] = pfbr;
            newRow[1] = foodItemNames.toString().replace("[", "").replace("]", "");
            newRow[2] = foodItemsTotalPrice;
            newRow[3] = pfbr.getOrderStatus();
            model.addRow(newRow);
        }

        DefaultTableModel modelNon_Pending = (DefaultTableModel) jTable2.getModel();
        modelNon_Pending.setRowCount(0);

        for (FoodRequest pfbr : non_pendingFoodBevRequest) {
            ArrayList<String> foodItemNames = new ArrayList<String>();
            long foodItemsTotalPrice = 0;
            for (FoodItem fb : pfbr.getFoodItemDetails()) {
                foodItemNames.add(fb.getFoodItemName());
                foodItemsTotalPrice += fb.getFoodItemPrice();
            }
            Object[] newRow = new Object[4];
            newRow[0] = pfbr;
            newRow[1] = foodItemNames.toString().replace("[", "").replace("]", "");
            newRow[2] = foodItemsTotalPrice;
            newRow[3] = pfbr.getOrderStatus();
            modelNon_Pending.addRow(newRow);
        }
    }

    void updateWorkRequestStatus(FoodRequest selectedFoodBevWorkRequest, String status) {
        selectedFoodBevWorkRequest.setOrderStatus(status);
        int index = 0;
        for (FoodRequest fbr : system.getFoodRequestDirectory().getFoodRequestsList()) {
            if (fbr.getUserId().equals(selectedFoodBevWorkRequest.getUserId())) {
                system.getFoodRequestDirectory().updateFoodRequest(fbr, index);
                break;
            }
            index++;
        }
    }

    private void formatRows() {

        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

        jTable2.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                String status = String.valueOf(model.getValueAt(row, 3));
                c.setBackground(status.equals("Pending") ? Color.WHITE : status.equals("Approved") ? Color.GREEN : Color.RED);
                return c;
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnApprove = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "UserId", "Item Details", "Total Price", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnApprove.setBackground(new java.awt.Color(0, 102, 102));
        btnApprove.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btnApprove.setForeground(new java.awt.Color(255, 255, 255));
        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        btnReject.setBackground(new java.awt.Color(0, 102, 102));
        btnReject.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btnReject.setForeground(new java.awt.Color(255, 255, 255));
        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "UserId", "Item Details", "Total Price", "Status"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Food Requests");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 933, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(411, 411, 411)
                        .addComponent(btnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApprove)
                    .addComponent(btnReject))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRowIndex = jTable1.getSelectedRow();
            if (selectedRowIndex < 0) {
                JOptionPane.showMessageDialog(this, "Please select a row to approve.");
                return;
            }
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            FoodRequest selectedFoodBevWorkRequest = (FoodRequest) model.getValueAt(selectedRowIndex, 0);
            updateWorkRequestStatus(selectedFoodBevWorkRequest, "Approved");
            ClientTransaction ct = new ClientTransaction();
            ct.setUserId(selectedFoodBevWorkRequest.getUserId());
            ct.setSelectedCenter("Food&Beverage");
            ct.setTotalCost(totalPrice);
            system.getClientTransactionDirectory().addClientTransaction(ct);
            User getUser = system.getUserDirectory().getUserById(selectedFoodBevWorkRequest.getUserId());
            new EmailAlert().SendEmailOfNotification(getUser, "Food and Beverage");
            JOptionPane.showMessageDialog(this, "Request approved successfully and email notification sent");
            populateWorkRequestTable();
            formatRows();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRowIndex = jTable1.getSelectedRow();
            if (selectedRowIndex < 0) {
                JOptionPane.showMessageDialog(this, "Please select a row to reject.");
                return;
            }
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            FoodRequest selectedFoodBevWorkRequest = (FoodRequest) model.getValueAt(selectedRowIndex, 0);
            updateWorkRequestStatus(selectedFoodBevWorkRequest, "Rejected");
            JOptionPane.showMessageDialog(this, "Order rejected successfully");
            populateWorkRequestTable();
            formatRows();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnRejectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
